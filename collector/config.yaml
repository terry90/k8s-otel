apiVersion: v1
kind: ConfigMap
metadata:
  namespace: monitoring
  name: otel-collector-config
data:
  config.yaml: |+
    extensions:
      # Configures the Kubernetes observer to watch for pod start and stop events.
      k8s_observer:
        observe_nodes: true
        observe_services: true
        observe_ingresses: true

    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      # receiver_creator/k8skubeletstats:
      #   watch_observers: [k8s_observer]
      #   receivers:
          # kubeletstats:
          #   # If this rule matches an instance of this receiver will be started.
          #   rule: type == "k8s.node"
          #   config:
          #     auth_type: serviceAccount
          #     collection_interval: 15s
          #     endpoint: '`endpoint`:`kubelet_endpoint_port`'
          #     extra_metadata_labels:
          #       - container.id
          #     metric_groups:
          #       - container
          #       - pod
          #       - node
      receiver_creator/discovery:
        watch_observers: [k8s_observer]
        receivers:
          prometheus_simple:
            collection_interval: 30s
            rule: type == "pod" && annotations["metrics/scrape"] == "true"
            config:
              job_name: '`name`' 
              metrics_path: '`"metrics/path" in annotations ? annotations["metrics/path"] : "/metrics"`'
              endpoint: '`replace(endpoint, ".", "-")`.`namespace`.pod.cluster.local:`"metrics/port" in annotations ? annotations["metrics/port"] : 9000`'
      # Collect own metrics
      prometheus/collector:
        config:
          scrape_configs:
            - job_name: "opentelemetry-collector"
              static_configs:
                - targets: ["localhost:8888"]

    processors:
      batch:
    #   send_batch_size: 2048
    #   send_batch_max_size: 4096
    #timeout: 1s
      k8sattributes:

    exporters:
      otlp/traces:
        endpoint: http://tempo:4317
        tls:
          insecure: true
      otlphttp/logs:
        endpoint: http://loki:3100/otlp
        tls:
          insecure: true
      prometheus/metrics:
        endpoint: 0.0.0.0:9464

    service:
      extensions: [k8s_observer]
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlp/traces]
        metrics:
          receivers: [otlp, prometheus/collector, receiver_creator/discovery]
          processors: [batch]
          exporters: [prometheus/metrics]
        logs:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlphttp/logs]
